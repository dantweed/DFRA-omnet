[General]
network = DFRA
#cmdenv-output-file = omnetpp.log
debug-on-errors=true
fname-append-host = true
#sim-time-limit = 20s
tkenv-plugin-path = ../../../etc/plugins
#record-eventlog = true
**.channel.throughput.result-recording-modes = all
**.channel.thruputDisplayFormat = "B"
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 800m
**.constraintAreaMaxY = 600m
**.constraintAreaMaxZ = 0m

# access point
#**.ap.wlan[*].mac.address = "10:00:00:00:00:00"
#**.host[*].**.mgmt.accessPointAddress = "10:00:00:00:00:00"
**.mgmt.frameCapacity = 10

# mobility
**.host[*].mobilityType = "StationaryMobility"
#**.host[*].mobility.changeInterval = truncnormal(2ms, 0.5ms)
#**.host[*].mobility.changeAngleBy = normal(0deg, 30deg)
#**.host[*].mobility.speed = truncnormal(20mps, 8mps)
#**.host[*].mobility.updateInterval = 100ms

# nic settings
#**.wlan*.bitrate = 2Mbps

**.mac.address = "auto"
**.mac.maxQueueSize = 14
**.mac.rtsThresholdBytes = 3000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinBroadcast = 31
**.wlan[*].agent.activeScan = false 		#DT
**.wlan[*].mac.upperMac.prioritizeMulticast = false #DT

**.wlan[*].radio.transmitter.power = 20mW
#**.wlan[*].radio.transmitter.bitrate = 2Mbps
**.wlan[*].radio.transmitter.headerBitLength = 100b
#**.wlan[*].**.carrierFrequency = 2.412GHz

# NIC settings
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 100    # packets

**.wlan[*].radio.transmitter.bandwidth = 2MHz
**.wlan[*].radio.receiver.sensitivity = -85dBm
**.wlan[*].radio.receiver.snirThreshold = 4dB
**.wlan[*].radio.bandwidth = 2MHz


### Specifics
[Config UDPtest]
description = "n host udp"
**.numUdpApps = 1
**.host[*].udpApp[*].typename = "UDPBasicBurst"
**.host[*].udpApp[0].localPort = 100
**.host[*].udpApp[0].destPort = 100
**.host[*].udpApp[0].messageLength = 1250B
**.host[*].udpApp[0].sendInterval = 0.01s #approx 100Mibs 
**.host[*].udpApp[0].destAddresses = moduleListByPath("**.sink")
**.host[*].udpApp[0].chooseDestAddrMode = "once"
**.host[*].udpApp[0].burstDuration = 300s
**.host[*].udpApp[0].sleepDuration = 0s

**.host[*].udpApp[0].startTime = 1s
**.host[*].udpApp[0].stopTime = -1s
**.host[*].udpApp[0].delayLimit = 3s

**.sink.udpApp[*].typename = "UDPThrSink"
**.sink.udpApp[0].localPort = 100
#otherwise defaults are fine


[Config TCPtest] 
description = "n host tcp"
# leave numHosts undefined here
#*.numHosts = ${n=2..4 step 1}

#### TCP stuff
#**.tcpType = "TCP"
#**.numTcpApps = 1
#**.tcp.receiveQueueClass = default
#**.tcp.recordStats = true
#**.tcp.timestampSupport = true
#
### tcp apps
#**.numTcpApps = 1
#*.host[*].tcpApp[*].typename = "TCPBasicClientApp"
#*.host[*].tcpApp[*].localPort = 1000
#*.host[*].tcpApp[*].connectAddress = "sink"
#*.host[*].tcpApp[*].connectPort = 1000
#*.host[*].tcpApp[*].thinkTime=0.1s #time gap between requests
#*.host[*].tcpApp[*].idleInterval=0.1s #time gap between sessions
#*.host[*].tcpApp[*].reconnectInterval=1s # default(30s);  // if connection breaks, waits this much before trying to reconnect
#
#*.sink.tcpApp[*].typename = "TCPGenericSrvApp"
#*.sink.tcpApp[*].localPort = 1000


# ip settings
**.ip.procDelay = 0s
**.forwarding = false

# ARP settings
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
# tcp settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = true                       # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1012                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.recordStats = true                            # recording of seqNum etc. into output vectors enabled/disabled
# tcp apps - client
**.host[*].numTcpApps = 1
**.host[*].tcpApp = "TCPSessionApp"
**.host[*].tcpApp[*].typename = "TCPSessionApp"  # FTP
**.host[*].tcpApp[*].sendBytes = 100MiB
**.host[*].tcpApp[*].active = true
**.host[*].tcpApp[*].localPort = 10020
**.host[*].tcpApp[*].connectAddress = "sink"
**.host[*].tcpApp[*].connectPort = 10021
**.host[*].tcpApp[*].tOpen = 20s
**.host[*].tcpApp[*].tSend = 0s
**.host[*].tcpApp[*].tClose = 0s
**.host[*].tcpApp[*].sendScript = ""

# tcp apps - server
**.sink.numTcpApps = 1
**.sink.tcpApp = "TCPSinkApp"
**.sink.tcpApp[*].typename = "TCPSinkApp"
**.sink.tcpApp[*].localPort = 10021

